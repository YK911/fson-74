/*|*****************************************
  |********** –ü—Ä–æ—Ç–æ—Ç–∏–ø–∏ —Ç–∞ –∫–ª–∞—Å–∏ ***********
  |***************************************** */

/**
  |============================
  | –ó–∞–≤–¥–∞–Ω–Ω—è 1

  | –ù–∞–ø–∏—à—ñ–∏—Ç —Ñ—É–Ω–∫—Ü—ñ—é-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä Account, —è–∫–∞ —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç –∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ login —Ç–∞ email.
  | –í prototype —Ñ—É–Ω–∫—Ü—ñ—ó-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –¥–æ–¥–∞–π—Ç–µ –º–µ—Ç–æ–¥ getInfo(),
  | —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å –∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ–ª—ñ–≤ login —ñ email –æ–±'—î–∫—Ç–∞ —è–∫–∏–π –π–æ–≥–æ –≤–∏–∫–ª–∏–∫–∞–≤.
  |============================
*/
// function Account({ login, email }) {
//   this.login = login;
//   this.email = email;
// }

// Account.prototype.getInfo = function () {
//   console.log(`Login: ${this.login}, Email: ${this.email}`);
// };
//==============================================================================
// console.log(Account.prototype.getInfo); // function

// const mango = new Account({
//   login: 'Mangozedog',
//   email: 'mango@dog.woof',
// });

// mango.getInfo(); // Login: Mangozedog, Email: mango@dog.woof

// const poly = new Account({
//   login: 'Poly',
//   email: 'poly@mail.com',
// });

// poly.getInfo(); // Login: Poly, Email: poly@mail.com

/**
  |============================
  | –ó–∞–≤–¥–∞–Ω–Ω—è 2

  | –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä Storage, —è–∫–∞ –ø—Ä–∏ –≤–∏–∫–ª–∏–∫—É –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏–º–µ –æ–¥–∏–Ω –∞–≥—Ä—É–º–µ–Ω—Ç
  | —É –≤–∏–≥–ª—è–¥—ñ –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ –º–∞—Å–∏–≤—É —Ç–æ–≤–∞—Ä—ñ–≤ —ñ –∑–∞–ø–∏—Å—É–≤–∞—Ç–∏–º–µ —ó—Ö —É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å items.
  | –î–æ–¥–∞–π—Ç–µ –Ω–∞—Å—Ç—É–ø–Ω—ñ –º–µ—Ç–æ–¥–∏ –¥–æ —Ñ—É–Ω–∫—Ü—ñ—ó-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ Storage:
  | getItems() - –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –ø–æ—Ç–æ—á–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤
  | addItem(item) - –ø—Ä–∏–π–º–∞—î —Ç–∞ –¥–æ–¥–∞—î –Ω–æ–≤–∏–π —Ç–æ–≤–∞—Ä –¥–æ –º–∞—Å–∏–≤—É items
  | removeItem(item) - –ø—Ä–∏–π–º–∞—î —Ç–æ–≤–∞—Ä —ñ, —è–∫—â–æ –≤—ñ–Ω —î, –≤–∏–¥–∞–ª—è—î –π–æ–≥–æ –∑ –º–∞—Å–∏–≤—É items
  |============================
*/
// const Storage = function (arr) {
//   this.items = arr;
// };
// Storage.prototype.getItems = function () {
//   return this.items;
// };
// Storage.prototype.addItem = function (item) {
//   return this.items.push(item);
// };
// Storage.prototype.removeItem = function (item) {
//   let tempIndx = this.items.indexOf(item);
//   return this.items.splice(tempIndx, 1);
// };

// function Storage(items) {
//   this.items = items;

//   this.getItems = function () {
//     return this.items;
//   };

//   this.addItem = function (item) {
//     this.items.push(item);
//   };

//   this.removeItem = function (item) {
//     const index = this.items.indexOf(item);
//     if (index !== -1) {
//       this.items.splice(index, 1);
//     }
//   };
// }

// const storage = new Storage(["üçè", "üçå", "ü•≠", "üçâ"]);

// const items = storage.getItems();
// console.table(items); // ["üçè", "üçå", "ü•≠", "üçâ"]

// storage.addItem('ü´ê');
// console.table(storage.items); // ["üçè", "üçå", "ü•≠", "üçâ", "ü´ê"]

// storage.removeItem('ü•≠');
// console.table(storage.items); // ["üçè", "üçå", "ü´ê", "üçâ"]

/**
  |============================
  | –ó–∞–≤–¥–∞–Ω–Ω—è 3

  | –ù–∞–ø–∏—à—ñ—Ç—å –∫–ª–∞—Å Client —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç –∑ ‚Äã‚Äã–≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ login email
  | –û–≥–æ–ª–æ—Å—ñ—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ #login #email,
  | –¥–æ—Å—Ç—É–ø–∏ –¥–æ —è–∫–∏—Ö –∑—Ä–æ–±—ñ—Ç—å —á–µ—Ä–µ–∑ –≥–µ—Ç—Ç–µ—Ä —Ç–∞ —Å–µ—Ç—Ç–µ—Ä
  |============================
*/
// class Client {
//   #login;
//   #email;

//   constructor(login, email) {
//     this.#login = login;
//     this.#email = email;
//   }

//   get getClientData() {
//     return {
//       login: this.#login,
//       email: this.#email,
//     };
//   }

//   set changeEmail(newEmail) {
//     this.#email = newEmail;
//   }
// }

//   constructor(login, email) {
//     this.#login = login;
//     this.#email = email;
//   }

//   get getClientData() {
//     return {
//       login: this.#login,
//       email: this.#email,
//     };
//   }
//   set changeEmail(newEmail) {
//     this.#email = newEmail;
//   }
// }
// const client = new Client('mango', 'mango@gmail.com');
// console.log(client.getClientData); // {login: 'mango', email: 'mango@gmail.com'}

// client.changeEmail = 'tango@gmail.com';
// console.log(client.getClientData.email); // 'tango@gmail.com'

// const anotherClient = new Client("poly", "poly@post.ua");
// console.log(anotherClient.getClientData);
/**
  |============================
  | –ó–∞–≤–¥–∞–Ω–Ω—è 4

  | –ù–∞–ø–∏—à—ñ—Ç—å –∫–ª–∞—Å Notes, —è–∫–∏–π —É–ø—Ä–∞–≤–ª—è—î –∫–æ–ª–µ–∫—Ü—ñ—î—é –Ω–æ—Ç–∞—Ç–æ–∫ —É –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ items.
  | –ù–æ—Ç–∞—Ç–∫–∞ - —Ü–µ –æ–±'—î–∫—Ç —ñ–∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ text —ñ priority.
  | –î–æ–¥–∞–π –∫–ª–∞—Å—É —Å—Ç–∞—Ç–∏—á–Ω–∏–π –º–µ—Ç–æ–¥ Priopity, —è–∫–∏–π –±—É–¥–µ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –æ–±'—î–∫—Ç —ñ–∑ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–∞–º–∏.
  | –î–æ–¥–∞–π –º–µ—Ç–æ–¥–∏ addNote(note), removeNote(text), updatePriority(text, newPriority)
  |============================
*/

class Notes {
  static Priority() {
    return {
      HIGHT: "hight",
      LOW: "low",
    };
  }
  constructor() {
    this.items = [];
  }

  addNote(note) {
    return this.items.push(note);
  }

  removeNote(noteName) {
    const index = this.items.findIndex((item) => item.text === noteName);
    if (index !== -1) {
      this.items.splice(index, 1);
    }
  }

  updatePriority({ text, newPriority }) {
    const index = this.items.findIndex((item) => item.text === text);
    if (index !== -1) {
      this.items[index].priority = newPriority;
    }
  }
}

const firstNote = new Notes();

firstNote.addNote({ text: "–ö—É–ø–∏—Ç–∏ —Ñ—Ä—É–∫—Ç–∏", priority: Notes.Priority().LOW });
firstNote.addNote({
  text: "–ü—Ä–∏–±—Ä–∞—Ç–∏ –≤ –∫—ñ–º–Ω–∞—Ç—ñ",
  priority: Notes.Priority().LOW,
});
console.log(firstNote.items); // [{text: '–ö—É–ø–∏—Ç–∏ —Ñ—Ä—É–∫—Ç–∏', priority: 'low'}, {text: '–ü—Ä–∏–±—Ä–∞—Ç–∏ –≤ –∫—ñ–º–Ω–∞—Ç—ñ', priority: 'low'}]

firstNote.updatePriority({
  text: "–ö—É–ø–∏—Ç–∏ —Ñ—Ä—É–∫—Ç–∏",
  newPriority: Notes.Priority().HIGHT,
});
console.log(firstNote.items); // [{text: '–ö—É–ø–∏—Ç–∏ —Ñ—Ä—É–∫—Ç–∏', priority: 'hight'}, {text: '–ü—Ä–∏–±—Ä–∞—Ç–∏ –≤ –∫—ñ–º–Ω–∞—Ç—ñ', priority: 'low'}]

firstNote.removeNote("–ü—Ä–∏–±—Ä–∞—Ç–∏ –≤ –∫—ñ–º–Ω–∞—Ç—ñ");
console.log(firstNote.items); //[{text: '–ö—É–ø–∏—Ç–∏ —Ñ—Ä—É–∫—Ç–∏', priority: 'hight'}]
/**
  |============================
  | –ó–∞–≤–¥–∞–Ω–Ω—è 5

  | –ù–∞–ø–∏—à—ñ—Ç—å –∫–ª–∞—Å Car —ñ–∑ –∑–∞–∑–Ω–∞—á–µ–Ω–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ —ñ –º–µ—Ç–æ–¥–∞–º–∏.
  |============================
*/
class Car {
  /*
   * –î–æ–¥–∞–π —Å—Ç–∞—Ç–∏—á–Ω–∏–π –º–µ—Ç–æ–¥ `getSpecs(car)`,
   * —è–∫–∏–π –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç-–º–∞—à–∏–Ω—É —è–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä —ñ –≤–∏–≤–æ–¥–∏—Ç—å
   * –≤ –∫–æ–Ω—Å–æ–ª—å –∑–Ω–∞—á–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π maxSpeed, speed, isOn, distance –∏ price.
   */
  static getSpecs(car) {
    console.log(car.speed, car.price, car.maxSpeed, car.isOn, car.distance);
  }

  /*
   * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –æ—Ç—Ä–∏–º—É—î –æ–±'—î–∫—Ç –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å.
   *
   * –î–æ–¥–∞–π –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –º–∞–π–±—É—Ç–Ω—å–æ–≥–æ –µ–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—É:
   *  speed - –ø–æ—Ç–æ—á–Ω–∞ —à–≤–∏–¥–∫—ñ—Å—Ç—å, –ø–æ—á–∞—Ç–∫–æ–≤–∞ 0
   *  price - —Ü—ñ–Ω–∞ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è
   *  maxSpeed - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ —à–≤–∏–¥–∫—ñ—Å—Ç—å
   *  isOn - –∑–∞–≤–µ–¥–µ–Ω–∏–π –∞–≤—Ç–æ–º–æ–±—ñ–ª—å, –∑–Ω–∞—á–µ–Ω–Ω—è true –∞–±–æ false. –°–ø–æ—á–∞—Ç–∫—É false
   *  distance - –∑–∞–≥–∞–ª—å–Ω–∏–π –∫—ñ–ª–æ–º–µ—Ç—Ä–∞–∂, —Å–ø–æ—á–∞—Ç–∫—É 0
   */

  constructor({ speed = 0, price, maxSpeed, isOn = false, distance = 0 }) {
    this.speed = speed;
    this._price = price;
    this.maxSpeed = maxSpeed;
    this.isOn = isOn;
    this.distance = distance;
  }

  /*
   * –î–æ–¥–∞–π –≥–µ—Ç—Ç–µ—Ä —ñ —Å–µ—Ç—Ç–µ—Ä –¥–ª—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ price,
   * —è–∫–∏–π –±—É–¥–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—é —Ü—ñ–Ω–∏ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è.
   */
  get price() {
    return this._price;
  }
  set price(newPrice) {
    this._price = newPrice;
  }
  /*
   * –î–æ–¥–∞–π –∫–æ–¥ –¥–ª—è —Ç–æ–≥–æ, —â–æ–± –∑–∞–≤–µ—Å—Ç–∏ –∞–≤—Ç–æ–º–æ–±—ñ–ª—å
   * –ó–∞–ø–∏—Å—É—î —É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å isOn –∑–Ω–∞—á–µ–Ω–Ω—è true
   */
  turnOn() {
    this.isOn = true;
    console.log(this.isOn);
  }
  /*
   * –î–æ–¥–∞–π –∫–æ–¥ –¥–ª—è —Ç–æ–≥–æ, —â–æ–± –∑–∞–≥–ª—É—à–∏—Ç–∏ –∞–≤—Ç–æ–º–æ–±—ñ–ª—å
   * –ó–∞–ø–∏—Å—É—î —É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å isOn –∑–Ω–∞—á–µ–Ω–Ω—è false,
   * —ñ —Å–∫–∏–¥–∞—î –ø–æ—Ç–æ—á–Ω—É —à–≤–∏–¥–∫—ñ—Å—Ç—å –≤ 0
   */
  turnOff() {
    this.isOn = false;
    this.speed = 0;
  }
  /*
   * –î–æ–¥–∞—î –¥–æ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ speed –æ—Ç—Ä–∏–º–∞–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è,
   * –∑–∞ —É–º–æ–≤–∏, —â–æ —Ä–µ–∑—É–ª—å—Ç—É—é—á–∞ —à–≤–∏–¥–∫—ñ—Å—Ç—å
   * –Ω–µ –±—ñ–ª—å—à–µ, –Ω—ñ–∂ –∑–Ω–∞—á–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ maxSpeed
   */
  accelerate(value) {
    if (this.speed + value <= this.maxSpeed) {
      this.speed += value;
    } else {
      this.speed += this.maxSpeed - this.speed;
    }
  }
  /*
   * –ó–∞–±–∏—Ä–∞—î –≤—ñ–¥ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ speed –æ—Ç—Ä–∏–º–∞–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è,
   * –∑–∞ —É–º–æ–≤–∏, —â–æ —Ä–µ–∑—É–ª—å—Ç—É—é—á–∞ —à–≤–∏–¥–∫—ñ—Å—Ç—å –Ω–µ –º–µ–Ω—à–µ –Ω—É–ª—è
   */
  decelerate(value) {
    if (this.speed - value >= 0) {
      this.speed -= value;
    } else {
      this.speed -= this.speed; // this.speed = 0;
    }
  }
  /*
   * –î–æ–¥–∞—î –≤ –ø–æ–ª–µ distance –∫—ñ–ª–æ–º–µ—Ç—Ä–∞–∂ (hours * speed),
   * –∞–ª–µ —Ç—ñ–ª—å–∫–∏ –≤ —Ç–æ–º—É –≤–∏–ø–∞–¥–∫—É, —è–∫—â–æ –º–∞—à–∏–Ω–∞ –∑–∞–≤–µ–¥–µ–Ω–∞!
   */
  drive(hour) {
    if (this.isOn) {
      this.distance = hour * this.speed;
    }
  }
}

const mustang = new Car({ maxSpeed: 200, price: 2000 });

mustang.turnOn();
mustang.accelerate(50);
mustang.accelerate(50);
mustang.accelerate(50);
mustang.drive(2);

Car.getSpecs(mustang);
// maxSpeed: 200, speed: 50, isOn: true, distance: 100, price: 2000

mustang.decelerate(20);
mustang.decelerate(20);
mustang.decelerate(20);

mustang.drive(1);
mustang.turnOff();

Car.getSpecs(mustang);
// maxSpeed: 200, speed: 0, isOn: false, distance: 130, price: 2000

console.log(mustang.price); // 2000
mustang.price = 4000;
console.log(mustang.price); // 4000
